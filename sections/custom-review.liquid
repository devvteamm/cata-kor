{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{% comment %} {%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif

  assign show_desktop_slider = false
  if section.settings.enable_desktop_slider and section.blocks.size > section.settings.columns_desktop
    assign show_desktop_slider = true
  endif
-%} {% endcomment %}

{% capture slider_navigation %}
  {% comment %} {%- if show_mobile_slider or show_desktop_slider -%}
    <div class="slider-buttons-wrapper">
        <div class="slider-buttons">
        <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
        >
            <span class="svg-wrapper">{{ 'icon-left-arrow.svg' | inline_asset_content }}</span>
        </button>
        <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
        >
            <span class="svg-wrapper">{{ 'icon-right-arrow.svg' | inline_asset_content }}</span>
        </button>
        </div>
    </div>
  {%- endif -%} {% endcomment %}
     <!-- Swiper Navigation -->
     <div class="swiper-button--wrapper small-hide">
      <div class="swiper-button-prev"><span class="svg-wrapper">{{ 'icon-left-arrow.svg' | inline_asset_content }}</span></div>
      <div class="swiper-button-next"><span class="svg-wrapper">{{ 'icon-right-arrow.svg' | inline_asset_content }}</span></div>
    </div>
{% endcapture %}

<div class="multicolumn {{ template.name }} color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div
    class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    <slider-component class="slider-mobile-gutter">
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin multicolumn__title flex {{ section.settings.title_align }}">
        <h4 class="sub-title">{{ section.settings.sub_title }}</h4>
        <h2 class="title inline-richtext {{ section.settings.heading_size }}">
          {{ section.settings.title }}
        </h2>
        {%- if section.settings.button_label != blank -%}
          <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide">
            {{- section.settings.button_label | escape -}}
          </a>
        {%- endif -%}
          {{ slider_navigation }}
      </div>
    {%- endunless -%}
    <div class="swiper-container_wrapper swiper">
      <ul
        class="swiper-wrapper multicolumn-list contains-content-container"
        id="Slider-{{ section.id }}"
        role="list"
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank
            and block.settings.title == blank
            and block.settings.text == blank
            and block.settings.link_label == blank
          -%}
            {%- assign empty_column = ' multicolumn-list__item--empty' -%}
          {%- endif -%}

          <li
            id="Slide-{{ section.id }}-{{ forloop.index }}"
            class="swiper-slide multicolumn-list__item {% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ forloop.index }};"
            {% endif %}>
            <div class="multicolumn-card content-container">
              {%- if block.settings.image != blank -%}
                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                  <div
                    class="media media--transparent media--{{ section.settings.image_ratio }}"
                    {% if section.settings.image_ratio == 'adapt' %}
                      style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                    {% endif %}
                  >
                    {%- liquid
                      assign number_of_columns = section.settings.columns_desktop
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}
                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}
                    {{
                      block.settings.image
                      | image_url: width: 3200
                      | image_tag:
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                        sizes: sizes,
                        class: 'multicolumn-card__image'
                    }}
                  </div>
                </div>
              {%- endif -%}
              <div class="multicolumn-card__info">
                {%- if block.settings.text != blank -%}
                    <div class="rte">{{ block.settings.text }}</div>
                  {%- endif -%}
                {% assign user_rating = block.settings.product_rating_number | default: 5 | plus: 0 %}
                    {% assign full_stars = user_rating | floor %}

                    {% assign decimal_part = user_rating | minus: full_stars %}

                    {% if decimal_part > 0 %}
                      {% assign remaining_stars = 5 | minus: full_stars | minus: 1 %}
                    {% else %}
                      {% assign remaining_stars = 5 | minus: full_stars %}
                    {% endif %}
                    <div class="rating-stars-wrapper">
                    <div class="rating-stars">
                      {% for i in (1..full_stars) %}
                        <span class="star full">
                          <span class="svg-wrapper">{{ 'icon-rating-star.svg' | inline_asset_content }}</span>
                        </span>
                      {% endfor %}

                      {% if decimal_part > 0 %}
                        <span class="star-partial-wrapper">
                        <span class="star partial">
                          <span class="svg-wrapper">{{ 'icon-rating-star.svg' | inline_asset_content }}</span>
                        </span>
                        <span class="star empty">
                          <span class="svg-wrapper">{{ 'icon-rating-star.svg' | inline_asset_content }}</span>
                        </span>
                        <style>
                          .star-partial-wrapper {
                            position: relative;
                          }
                          .star-partial-wrapper .star.partial {
                            position: absolute;
                          }
                          .star.partial .svg-wrapper svg path {
                            clip-path: inset(0 {{ decimal_part | times: 100 }}% 0 0);
                          }
                        </style>
                        </span>
                      {% endif %}


                      {% for i in (1..remaining_stars) %}
                        <span class="star empty">
                          <span class="svg-wrapper">{{ 'icon-rating-star.svg' | inline_asset_content }}</span>
                        </span>
                      {% endfor %}
                      <style>
                          .star.empty .svg-wrapper svg path {
                            fill:none;
                          }
                        </style>
                    </div>
                  </div>
                  {%- if block.settings.title != blank -%}
                    <h4 class="inline-richtext">{{ block.settings.title }}</h4>
                  {%- endif -%}
                {%- if block.settings.link_label != blank -%}
                  <a
                    class="link animate-arrow"
                    {% if block.settings.link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.link }}"
                    {% endif %}
                  >
                    {{- block.settings.link_label | escape -}}
                    <span class="svg-wrapper"
                      ><span class="icon-wrap">&nbsp;{{ 'icon-arrow.svg' | inline_asset_content }}</span></span
                    >
                  </a>
                {%- endif -%}
              </div>
            </div>
          </li>
        {%- endfor -%}
      </ul>
      <div class="swiper-pagination small-hide"> </div>
    </div>
      <div class="center">
        {%- if section.settings.button_label != blank -%}
          <a
          class="button button--primary"
          {% if section.settings.button_link == blank %}
            role="link" aria-disabled="true"
            {% else %}
            href="{{ section.settings.button_link }}"
          {% endif %}
          >
          {{ section.settings.button_label | escape }}
          </a>
        {%- endif -%}
      </div>
    </slider-component>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    function getCSSVariableValue(variable) {
      return parseInt(getComputedStyle(document.documentElement).getPropertyValue(variable));
    }
  
    let swiperInstance;
  
    function initSwiper() {
      // if (window.innerWidth >= 750 && !swiperInstance) {
        swiperInstance = new Swiper(".swiper-container_wrapper", {
          slidesPerView: {{ section.settings.columns_mobile }},
          spaceBetween: getCSSVariableValue("--grid-mobile-horizontal-spacing"),
          loop: true,
          navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
          },
          pagination: {
            el: ".swiper-pagination",
            clickable: true,
          },
          breakpoints: {
            989: { slidesPerView: {{ section.settings.columns_desktop }}, spaceBetween: getCSSVariableValue("--grid-desktop-horizontal-spacing") },
          },
        });
      // } else if (window.innerWidth < 750 && swiperInstance) {
      //   swiperInstance.destroy(true, true);
      //   swiperInstance = null;
      // }
    }
  
    // Initialize Swiper based on screen size
    initSwiper();
  
    // Listen for window resize events
    window.addEventListener("resize", function () {
      initSwiper();
    });
  });
  
</script>

{% schema %}
{
  "name": "Custom Reviews block",
  "class": "section custom_review_block",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "t:sections.multicolumn.settings.title.default",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
        "type": "inline_richtext",
        "id": "sub_title",
        "default": "Ingredients And Study",
        "label": "Sub Heading"
      },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "title_align",
      "options": [
        {
          "value": "justify-start",
          "label": "Left"
        },
        {
          "value": "justify-center",
          "label": "Center"
        },
        {
          "value": "justify-end",
          "label": "Right"
        },
      ],
      "default": "justify-start",
      "label": "Title align"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "sixth",
          "label": "t:sections.multicolumn.settings.image_width.options__6.label"
        },
        {
          "value": "fifth",
          "label": "t:sections.multicolumn.settings.image_width.options__5.label"
        },
        {
          "value": "fourth",
          "label": "t:sections.multicolumn.settings.image_width.options__4.label"
        },
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 0.1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "t:sections.multicolumn.settings.button_label.default",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "t:sections.multicolumn.blocks.column.settings.title.default",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.multicolumn.blocks.column.settings.text.default",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "number",
          "id": "product_rating_number",
          "label": "User Rating"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:sections.multicolumn.blocks.column.settings.link_label.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.multicolumn.blocks.column.settings.link.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Review",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
